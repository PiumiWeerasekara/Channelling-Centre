/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.pos.view;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import lk.ijse.pos.controller.AppointmentController;
import lk.ijse.pos.dto.AppointmentDTO;

/**
 *
 * @author DEll
 */
public class PnlManageAppointment extends javax.swing.JPanel {

    private boolean update = false;

    /**
     * Creates new form PostponeAppointment
     */
    public PnlManageAppointment() {
        initComponents();
        loadAllAppointments();
        loadAllAppointmentIds();
        txtAppointmentId.setVisible(false);
        txtReceptionID.setVisible(false);
        txtDoctorID.setVisible(false);
        txtPatientID.setVisible(false);
        txtPatientName.setVisible(false);
        txtDate.setVisible(false);
        tblAppointment.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (tblAppointment.getSelectedRow() == -1) {
                    return;
                }
                update = true;
//                txtAppointmentId.setText(Integer.toString((String) tblAppointment.getValueAt(tblAppointment.getSelectedRow(), 0)));
//                txtPatientID.setText((String) tblAppointment.getValueAt(tblAppointment.getSelectedRow(), 1));
//                txtDoctorID.setText((String) tblAppointment.getValueAt(tblAppointment.getSelectedRow(), 2));
//                txtReceptionID.setText((String) tblAppointment.getValueAt(tblAppointment.getSelectedRow(), 3));
//                txtAppDate.setText((String) tblAppointment.getValueAt(tblAppointment.getSelectedRow(), 0));
//                txtAppoTime.setText((String) tblAppointment.getValueAt(tblAppointment.getSelectedRow(), 1));
//                txtAppoNo.setText((String) tblAppointment.getValueAt(tblAppointment.getSelectedRow(), 2));
//                txtPatientName.setText((String) tblAppointment.getValueAt(tblAppointment.getSelectedRow(), 3));
//                txtPatientName.setText((String) tblAppointment.getValueAt(tblAppointment.getSelectedRow(), 4));
//                txtDoctorName.setText((String) tblAppointment.getValueAt(tblAppointment.getSelectedRow(), 5));
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        dateCAppo = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtAppoTime = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        lblRefresh = new javax.swing.JLabel();
        txtAppoNo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAppointment = new javax.swing.JTable();
        txtDoctorName = new javax.swing.JTextField();
        btnPostpone = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txtReceptionID = new javax.swing.JTextField();
        txtPatientID = new javax.swing.JTextField();
        txtPatientName = new javax.swing.JTextField();
        txtDate = new javax.swing.JTextField();
        txtDoctorID = new javax.swing.JTextField();
        txtAppointmentId = new javax.swing.JTextField();
        txtAppDate = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cmbAppointmentId = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(51, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("                                         Manage Appointment");
        jLabel1.setOpaque(true);
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 1090, 60));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Doctor Name");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, 130, 30));

        dateCAppo.setDateFormatString("yyyy-MM-dd");
        add(dateCAppo, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 460, 20, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Appointment Date");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 460, 130, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Appointment Time");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 510, 130, 30));

        txtAppoTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAppoTimeActionPerformed(evt);
            }
        });
        add(txtAppoTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 510, 150, 30));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Appointment No");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 560, 130, 30));

        lblRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/pos/resources/icons8-available-updates-48.png"))); // NOI18N
        lblRefresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRefreshMouseClicked(evt);
            }
        });
        add(lblRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 90, 50, 40));

        txtAppoNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAppoNoActionPerformed(evt);
            }
        });
        add(txtAppoNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 560, 40, 30));

        tblAppointment.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblAppointment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Appointment ID", "PatientID", "ReceptionID", "DoctorID", "Date", "Time", "Appointment No", "PatientName", "Doctor Name"
            }
        ));
        jScrollPane1.setViewportView(tblAppointment);
        if (tblAppointment.getColumnModel().getColumnCount() > 0) {
            tblAppointment.getColumnModel().getColumn(0).setResizable(false);
            tblAppointment.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 850, 210));

        txtDoctorName.setEditable(false);
        txtDoctorName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorNameActionPerformed(evt);
            }
        });
        add(txtDoctorName, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 410, 240, 30));

        btnPostpone.setBackground(new java.awt.Color(204, 255, 204));
        btnPostpone.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnPostpone.setForeground(new java.awt.Color(0, 204, 51));
        btnPostpone.setText("Postpone");
        btnPostpone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPostponeActionPerformed(evt);
            }
        });
        add(btnPostpone, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 510, 100, 40));

        btnCancel.setBackground(new java.awt.Color(255, 204, 204));
        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 0, 51));
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 510, 100, 40));

        txtReceptionID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtReceptionIDActionPerformed(evt);
            }
        });
        add(txtReceptionID, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, 30, 20));
        add(txtPatientID, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 90, 40, 20));
        add(txtPatientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 90, 90, -1));
        add(txtDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 90, 70, -1));

        txtDoctorID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorIDActionPerformed(evt);
            }
        });
        add(txtDoctorID, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, 30, 20));

        txtAppointmentId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAppointmentIdActionPerformed(evt);
            }
        });
        add(txtAppointmentId, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 30, 20));
        add(txtAppDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 460, 160, 30));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Appointment Id");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 360, 130, 30));

        cmbAppointmentId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbAppointmentIdItemStateChanged(evt);
            }
        });
        add(cmbAppointmentId, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 360, 160, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void txtAppoTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAppoTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAppoTimeActionPerformed

    private void txtAppoNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAppoNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAppoNoActionPerformed

    private void btnPostponeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPostponeActionPerformed
        Date date1 = dateCAppo.getDate();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String formatDate = dateFormat.format(date1);
        txtAppDate.setText(formatDate);
        try {
            String id=cmbAppointmentId.getSelectedItem().toString();
            AppointmentDTO appointmentDTO = new AppointmentDTO(
                    
                    Integer.parseInt(id),
                    Integer.parseInt(txtPatientID.getText()),
                    Integer.parseInt(txtReceptionID.getText()),
                    Integer.parseInt(txtDoctorID.getText()),
                    txtAppDate.getText(),
                    txtAppoTime.getText(),
                    txtAppoNo.getText(),
                    txtPatientName.getText(),
                    txtDoctorName.getText());
            boolean result = AppointmentController.updateAppointment(appointmentDTO);
            if (result) {
                JOptionPane.showMessageDialog(this, "Appointment has been updated successfully");
            } else {
                JOptionPane.showMessageDialog(this, "Appointment hasn't been updated successfully");
            }
            // TODO add your handling code here:
        } catch (Exception ex) {
            Logger.getLogger(PnlManageAppointment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPostponeActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtDoctorNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDoctorNameActionPerformed

    private void txtReceptionIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtReceptionIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtReceptionIDActionPerformed

    private void txtDoctorIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDoctorIDActionPerformed

    private void txtAppointmentIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAppointmentIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAppointmentIdActionPerformed

    private void cmbAppointmentIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbAppointmentIdItemStateChanged
        try {
            int id = (int) cmbAppointmentId.getSelectedItem();
            AppointmentDTO appointmentDTO = AppointmentController.searchAppointmentsByPId(id);
            txtPatientID.setText(Integer.toString(appointmentDTO.getpID()));
            txtReceptionID.setText(Integer.toString(appointmentDTO.getrID()));
            txtDoctorID.setText(Integer.toString(appointmentDTO.getdID()));
            txtAppDate.setText(appointmentDTO.getAppDate());
            txtAppoTime.setText(appointmentDTO.getAppTime());
            txtAppoNo.setText(appointmentDTO.getAppNO());
            txtPatientName.setText(appointmentDTO.getpName());
            txtDoctorName.setText(appointmentDTO.getdName());
            // TODO add your handling code here:
        } catch (Exception ex) {
            Logger.getLogger(PnlManageAppointment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbAppointmentIdItemStateChanged

    private void lblRefreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRefreshMouseClicked
        loadAllAppointments();
            // TODO add your handling code here:
       
    }//GEN-LAST:event_lblRefreshMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnPostpone;
    private javax.swing.JComboBox cmbAppointmentId;
    private com.toedter.calendar.JDateChooser dateCAppo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblRefresh;
    private javax.swing.JTable tblAppointment;
    private javax.swing.JTextField txtAppDate;
    private javax.swing.JTextField txtAppoNo;
    private javax.swing.JTextField txtAppoTime;
    private javax.swing.JTextField txtAppointmentId;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDoctorID;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtPatientID;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtReceptionID;
    // End of variables declaration//GEN-END:variables

    private void loadAllAppointments() {
        try {
            DefaultTableModel dtm = (DefaultTableModel) tblAppointment.getModel();
            dtm.setRowCount(0);

            List<AppointmentDTO> appointments = AppointmentController.getAllAppointments();

            if (appointments == null) {
                return;
            }

            for (AppointmentDTO appointment : appointments) {
                Object[] rowData = {
                    appointment.getAppointmentID(),
                    appointment.getpID(),
                    appointment.getrID(),
                    appointment.getdID(),
                    appointment.getAppDate(),
                    appointment.getAppTime(),
                    appointment.getAppNO(),
                    appointment.getpName(),
                    appointment.getdName()};
                dtm.addRow(rowData);
            }
        } catch (Exception ex) {
            Logger.getLogger(PnlManageAppointment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadAllAppointmentIds() {
        try {
            List<AppointmentDTO> appointments = AppointmentController.getAllAppointments();
            if (appointments != null) {
                cmbAppointmentId.removeAllItems();

            }
            for (AppointmentDTO appointment : appointments) {
                cmbAppointmentId.addItem(appointment.getAppointmentID());
            }
        } catch (Exception ex) {
            Logger.getLogger(pnlAppointment.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

}
