/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.pos.view;

import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import lk.ijse.pos.controller.DoctorController;
import lk.ijse.pos.controller.ScheduleController;
import lk.ijse.pos.dto.DoctorDTO;
import lk.ijse.pos.dto.ScheduleDTO;

/**
 *
 * @author DEll
 */
public class PnlViewSchedule extends javax.swing.JPanel {

    /**
     * Creates new form PnlViewSchedule
     */
    public PnlViewSchedule() {
        initComponents();
        loadDoctorNames();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton2 = new javax.swing.JRadioButton();
        cmbDoctorName = new javax.swing.JComboBox();
        lblRefresh = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSchedule = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jRadioButton2.setText("Doctor Name");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        add(jRadioButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        cmbDoctorName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbDoctorNameItemStateChanged(evt);
            }
        });
        cmbDoctorName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDoctorNameActionPerformed(evt);
            }
        });
        add(cmbDoctorName, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, 160, 30));

        lblRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lk/ijse/pos/resources/icons8-available-updates-48.png"))); // NOI18N
        lblRefresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRefreshMouseClicked(evt);
            }
        });
        add(lblRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 50, 40));

        tblSchedule.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblSchedule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DID", "Doctor Name", "Day", "patients Per Day", "Time period"
            }
        ));
        tblSchedule.setGridColor(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(tblSchedule);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 820, 210));

        jLabel1.setBackground(new java.awt.Color(51, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("                                         View Schedules");
        jLabel1.setOpaque(true);
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 1090, 60));

        jButton3.setBackground(new java.awt.Color(255, 204, 204));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 51, 51));
        jButton3.setText("Cancel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 500, 100, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void cmbDoctorNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDoctorNameActionPerformed
        try {
            String doctorName = (String) cmbDoctorName.getSelectedItem();

            ScheduleDTO scheduleDTO = ScheduleController.searchSchedule(doctorName);
            DefaultTableModel dtm = (DefaultTableModel) tblSchedule.getModel();
            dtm.setRowCount(0);
            List<ScheduleDTO> schedules = ScheduleController.getAllSchedules();
            if (schedules == null) {
                return;
            }
            for (ScheduleDTO schedule : schedules) {
                Object[] rowData = {
                    schedule.getdID(),
                    schedule.getdName(),
                    schedule.getDay(),
                    schedule.getPatientsPerDay(),
                    schedule.getTimePeriod()};
                dtm.addRow(rowData);
            }
            // TODO add your handling code here:
        } catch (Exception ex) {
            Logger.getLogger(PnlViewSchedule.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbDoctorNameActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cmbDoctorNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbDoctorNameItemStateChanged
//        String name = (String) cmbDoctorName.getSelectedItem();
//            ScheduleDTO scheduleDTO = ScheduleController.searchSchedule(name);
//            txtDoctorID.setText(Integer.toString(doctorDTO.getdID()));
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbDoctorNameItemStateChanged

    private void lblRefreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRefreshMouseClicked
        try {
            String doctorName = (String) cmbDoctorName.getSelectedItem();
            
            ScheduleDTO scheduleDTO = ScheduleController.searchSchedule(doctorName);
            DefaultTableModel dtm = (DefaultTableModel) tblSchedule.getModel();
            dtm.setRowCount(0);
            List<ScheduleDTO> schedules = ScheduleController.getAllSchedules();
            if (schedules == null) {
                return;
            }
            for (ScheduleDTO schedule : schedules) {
                Object[] rowData = {
                    schedule.getdID(),
                    schedule.getdName(),
                    schedule.getDay(),
                    schedule.getPatientsPerDay(),
                    schedule.getTimePeriod()};
                dtm.addRow(rowData);
            }
            // TODO add your handling code here:
        } catch (Exception ex) {
            Logger.getLogger(PnlViewSchedule.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lblRefreshMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbDoctorName;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblRefresh;
    private javax.swing.JTable tblSchedule;
    // End of variables declaration//GEN-END:variables

    private void loadDoctorNames() {
        try {
            List<DoctorDTO> doctors = DoctorController.getAllDoctors();
            if (doctors != null) {
                cmbDoctorName.removeAllItems();

            }
            for (DoctorDTO doctor : doctors) {
                cmbDoctorName.addItem(doctor.getdName());
            }
        } catch (Exception ex) {
            Logger.getLogger(PnlViewSchedule.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
